---
layout: post
title:  "Mirage_UIMaker"
date:   2015-11-23 17:50
categories: jekyll work
published: true
tags: []
---

##Mirage UIMaker##

###介绍###

&#160; &#160; &#160; &#160;Mirage_UIMaker是一款基于Mirage引擎，纯AS3语言开发的开源游戏UI界面编辑器。它具有市面上UI编辑器的常用功能，同时兼具windows10全新的界面布局。UIMaker最大的特点是轻巧，它可以快速启动、快速编辑、快速发布，删除了程序集成开发的功能，使得UIMaker更加专注于设计。

###特点###

* 快速启动：UI Maker轻量级的设计使得工具启动速度得到了很大提升。
* 专注于设计的可视化组建编辑：大胆的去掉了程序与界面集成的传统编辑器，把精力集中于界面的设计上，更加考究与细分软件系统的开发。
* 预览功能：设计界面的过程中可以及时预览，更加方便复杂组件的设计
* 工程文件、组建层级直观可见：从更大的尺度把握工程开发，及时掌控全局资源与层级关系。

###使用说明###

####布局####

&#160; &#160; &#160; &#160;UIMaker界面上分布着8个区域，如下图所示，彩色文字与对应颜色区域明确表示，里面还有两个黑色区域，一个左上角的菜单区（点击后出现）、另一个项目管理区（点击后出现）；

![Img][img_1] 图一

####创建、激活项目####

&#160; &#160; &#160; &#160;首次打开UIMaker，需要创建编辑项目，点击图一中设计区的“新建项目”按钮

![Img][img_2] 图一

出现如下图二中“新建项目”对话框，在此输入项目名、项目位置、默认高宽（默认值为960pixels*640pixels）点击确定即可完成创建项目。

![Img][img_4] 图二

&#160; &#160; &#160; &#160;此时在“资源列表”选项卡中会出现刚才创建的项目，设计区“已存在项目”栏目也出现这个项目的显示。新建项目还有另外一条路径就是在菜单区中创建，在出现的菜单列表中选择“新建项目”按钮，也会出现图二的“新建项目”对话框；

&#160; &#160; &#160; &#160;当前激活的项目决定了在保存文件的时候程序默认选择的路径。从图三设计区“已存在项目”栏目可以看出现在已经存在两个项目，其中标有**（A）**的表示当前激活项目，在这里你可以选择点击不同的项目从而在他们之间切换；

![Img][img_7] 图三

####创建与编辑文件####

&#160; &#160; &#160; &#160;只有当前有激活的项目时，UIMaker才允许用户创建编辑文件（.editor）。用户可以点击工具栏中的新建文件按钮（图四最右端按钮）或者菜单栏中的“新建文件”按钮，从而创建一个全新的编辑文件，此时设计区界面切换进入编辑状态。

![Img][img_8] 图四

&#160; &#160; &#160; &#160;用户可以从UIMaker左边的组件区中拖入想要使用的组件到设计区就可以创建一个该组件的实例，同时编辑器的实例层级区会刷新以显示最新的实例层级关系，UIMaker右边的实例编辑区也会显示当前选中的组件实例的可编辑属性。不同组件的可编辑属性是不同的，他们全部是由%APPROOT%/xml/UIConfig.xml文件所控制，也就是说用户可以自定义自己独特的属性编辑条目，但是一定注意：请保留备份；

如果用户在编辑过程中发现层级关系不是自己想要的，比如背景在按钮的上面，如图五。这时可以在实例层级区拖动任意一个到另一个上面释放，即可完成层级互换；

![Img][img_11] 图五

**这里需要强调的是：组件实例属性的变化是及时生效的，不需要用户点击类似“执行”按钮**；

####文件的保存、打开与预览####

&#160; &#160; &#160; &#160;当编辑完了界面之后，后续的工作就是保存、预览和再次编辑时候的打开操作。保存、打开按钮的位置与前面创建项目按钮的位置一样，有两个地方，不再赘述。需要说明的是打开文件还可以从项目管理区中editor目录下双击打开，如图六。

![Img][img_20] 图六

&#160; &#160; &#160; &#160;这里重点要说说预览功能。0.8.3版本的预览必须先保存editor文件。这个功能的确有些“不人性”，原因在于之前版本的输出文件在正式项目使用的时候，需要使用几个理论上只有编辑器才使用的数据类。新版本我们去掉了这个序列化过程，同时调整了预览的逻辑（新的逻辑就是以正式项目读取文件的方式一样，这样更准确，但前提是需要先保存）。这个“不人性”的功能在未来版本中肯定会被调整。

####文件使用####

&#160; &#160; &#160; &#160;当用户编辑完了界面之后，并且成功保存，UIMaker会在激活项目的view目录下生成对应的.view文件，这个文件就是具体项目使用的文件。使用过程很简单，主要两部分：
第一载入*.view文件：

{% highlight as3%}
var url:String="test.view";
UIMaker.load(url,this);
{% endhighlight %}

第二对文件中摆放的组件实例添加触发逻辑，比如按钮按下、文本框输入等：

{% highlight as3 %}
var btn:Button=UIMaker.getDisplayObject(url,"btn") as Button;
btn.addEventListener(GestureEvent.CLICK,onC);
{% endhighlight %}

大家可能想知道上面代码中“btn”是什么意思，这个就是获取view文件中具体实例的标志，它是在UIMaker中的编辑区给想要以后添加逻辑的实例自定义命名的字符串，如图七所示。也就是指定id属性的内容即可；

![Img][img_21] 图七

如果是个纯粹的界面，完全可以不要第二部分；

==EOF==

[img_1]:{{site.baseurl}}/img/UIMaker/image_uimaker1.jpg
[img_2]:{{site.baseurl}}/img/UIMaker/image_uimaker2.jpg
[img_3]:{{site.baseurl}}/img/UIMaker/image_uimaker3.jpg
[img_4]:{{site.baseurl}}/img/UIMaker/image_uimaker4.jpg
[img_5]:{{site.baseurl}}/img/UIMaker/image_uimaker5.jpg
[img_6]:{{site.baseurl}}/img/UIMaker/image_uimaker6.jpg
[img_7]:{{site.baseurl}}/img/UIMaker/image_uimaker7.jpg
[img_8]:{{site.baseurl}}/img/UIMaker/image_uimaker8.jpg
[img_9]:{{site.baseurl}}/img/UIMaker/image_uimaker9.jpg
[img_10]:{{site.baseurl}}/img/UIMaker/image_uimaker10.jpg
[img_11]:{{site.baseurl}}/img/UIMaker/image_uimaker11.jpg
[img_20]:{{site.baseurl}}/img/UIMaker/image_uimaker20.jpg
[img_21]:{{site.baseurl}}/img/UIMaker/image_uimaker21.jpg

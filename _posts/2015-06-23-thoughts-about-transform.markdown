---
layout: post_with_wisdom_mathjax
title:  "关于坐标系变换的一些思考"
date:   2015-06-23 16:29:15
categories: jekyll thoughts
published: true
excerpt: "关于坐标系变换的一些思考"
wisdom: 计算机天生就是用来解决以前没有过的问题的。—— 比尔盖茨（Bill Gates）
meta: 
author: 
tags: [变换 transform coordination]
---

*我一遍遍的回味着基础学科的知识，只因为它们太深奥。*

这里有个简单的基础题目：

>如何计算物体坐标系O中某点p(a,b)在世界坐标系W中的坐标？

{{site.blank}}估计大部分童鞋会说乘以矩阵，但问题是我们是如何得到这个计算方法的？或许是从书中看到，或许是从前辈口中得知，倘若你还没有进行过思考，建议你先琢磨琢磨，因为我觉得里面有无穷的乐趣，我可不希望自己的思想被他人先入为主。

##Thoughts##
{{site.blank}}我不管O坐标系中某个点在哪里，只要O与W重合，那么O中的点的坐标就是W中的坐标，这必须是一致的，此时我们可以说点p(a,b)的具体坐标值就是其在W中的坐标值。倘若O坐标系要离开W坐标系，比如要往W坐标系的x轴正向移动3个单位，那么O中的所有点便会被动的随着O坐标系的移动而同样向着W坐标系的x轴移动3个单位。如此一来O中的点p(a,b)便与W中的点(a+3,b)重合。再然后O坐标系向上（y轴正向）移动5个单位，理同上，于是上面的点对应W坐标系中的点(a+3,b+5)。紧接着O坐标系围绕Ｗ坐标系原点旋转theta度（逆时针方向），解释都是一样的：O中的所有点被迫旋转theta度（相对于W）。

{{site.blank}}当我们把这一系列联系起来看的时候会发现：所谓O坐标系中的点，一开始都是与W坐标系中的点同值对应（不是一一对应）的，只不过有的O坐标系像大陆漂移一样通过具体的变换（平移+旋转+缩放+切变等）跑到了其他地方，导致整个O中的所有点都经过如此变换。但是：O中的点的坐标对于O来说还保持的“漂移”之前的数据。于是我们假设这个O中的点的坐标是在W坐标系中定义的，那么这个点再经过上述“漂移”变换后应该与O中这个点在位置上重合。
思路就理清了：想要将O中的点转换成W中的点的坐标，就需要乘以该“漂移”变换，要将W中的点转化为O中的点坐标就乘以“漂移”变换的逆变换；

##更进一步##

{{site.blank}}我们知道旋转矩阵是正交矩阵，但是平移矩阵（平移数据作为四维矩阵中的第四个维度）不是正交矩阵，于是我们一般通过邻接矩阵法去计算其逆矩阵，而不能使用转置矩阵。要知道用邻接矩阵法计算一个四维矩阵的逆矩阵是相对直接转置慢的多的计算过程，优化这个问题我们可以使用一个新的抽象数据类型，他包含了旋转矩阵与平移向量，我们使用仿射空间去计算子空间的移动问题，如此一来，要计算一个变形（变换）的逆变换的时候，可以先平移到W空间的原点，后乘以转置矩阵，再移回原来的位置。 

##Update

###2016_01_02

{{site.blank}}u=M\*v表示：u标架是如何从v标架转换的。此时如果u标架下有一个点P，如果想要求得其在v标架下的坐标表示，就需要P右乘M的转置矩阵。

==EOF==











